name: mopper-conda-install-test

#on: [push]
on: 
  push:
    branches:
      - pytests_sam


jobs:
  build:
  
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.10"]
        

    steps:
      - uses: actions/checkout@v4
      #---------------------------------------------------
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      #---------------------------------------------------
      # Install Miniconda
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      # Create and activate conda environment
      - name: Create and activate conda environment
        run: |
          conda env create --name test-env --file conda/meta.yaml
          conda activate test-env

      # Install dependencies from conda
      - name: Install dependencies
        run: conda env update --name test-env --file conda/meta.yaml
      #---------------------------------------------------
      #- name: Lint with flake8
      #  run: |
      #    conda install flake8
          # stop the build if there are Python syntax errors or undefined names
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          #    - name: Install package 
      #        run: |
      #                 conda build conda/meta.yaml
      #---------------------------------------------------
      - name: Test with pytest
        run: |
          conda install pytest coverage codecov
          conda run -n test-env python -m pytest
          conda run -n test-env coverage run --source src -m pytest
      #---------------------------------------------------
      - name: Upload to codecov 
        if: steps.build.outcome == 'success'
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov
      #---------------------------------------------------
